---
import contactData from '../data/contact.json';
---

<section id="contacto" class="contact section-padding">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{contactData.title}</h2>
      <p class="section-subtitle">
        {contactData.subtitle}
      </p>
    </div>
    
    <div class="contact-content">
      <div class="contact-info">
        {contactData.contact_cards.map(card => (
          <div class="contact-card">
            <div class="contact-icon">{card.icon}</div>
            <h3>{card.title}</h3>
            <p>{card.value}</p>
            {card.link && <a href={card.link} class="contact-link">{card.link_text}</a>}
            {card.note && <span class="contact-note">{card.note}</span>}
          </div>
        ))}
        
        <div class="social-links">
          <h3>{contactData.social.title}</h3>
          <div class="social-icons">
            {contactData.social.links.map(link => (
              <a href={link.url} aria-label={link.label} class="social-link">
                {link.platform === 'instagram' && (
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                  </svg>
                )}
                {link.platform === 'facebook' && (
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                  </svg>
                )}
                {link.platform === 'pinterest' && (
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.75-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24c6.624 0 11.99-5.367 11.99-12.013C24.007 5.367 18.641.001 12.017.001z"/>
                  </svg>
                )}
              </a>
            ))}
          </div>
        </div>
      </div>
      
      <div class="contact-form-wrapper">
        <form class="contact-form" id="contact-form">
          {contactData.form.fields.map(field => (
            <div class="form-group">
              <label for={field.name}>{field.label}</label>
              {field.type === 'select' ? (
                <select id={field.name} name={field.name} required={field.required}>
                  {field.options.map(option => (
                    <option value={option.value}>{option.label}</option>
                  ))}
                </select>
              ) : field.type === 'textarea' ? (
                <textarea 
                  id={field.name} 
                  name={field.name} 
                  rows="5" 
                  placeholder={field.placeholder}
                  required={field.required}
                ></textarea>
              ) : (
                <input 
                  type={field.type} 
                  id={field.name} 
                  name={field.name} 
                  required={field.required}
                />
              )}
            </div>
          ))}
          
          <button type="submit" class="btn btn-submit">
            <span class="btn-text">{contactData.form.button_text}</span>
            <span class="btn-loading" style="display: none;">{contactData.form.button_loading}</span>
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<style>
  .contact {
    background: var(--color-light);
  }

  .section-header {
    text-align: center;
    margin-bottom: 60px;
  }

  .section-title {
    font-size: 2.5rem;
    margin-bottom: 15px;
    color: var(--color-primary);
  }

  .section-subtitle {
    font-size: 1.2rem;
    color: var(--color-gray);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .contact-content {
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    gap: 60px;
    align-items: start;
  }

  .contact-info {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

  .contact-card {
    background: var(--color-white);
    padding: 30px;
    border-radius: 15px;
    box-shadow: var(--shadow-soft);
    text-align: center;
    transition: var(--transition);
  }

  .contact-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-medium);
  }

  .contact-icon {
    font-size: 2rem;
    margin-bottom: 15px;
  }

  .contact-card h3 {
    font-size: 1.3rem;
    margin-bottom: 10px;
    color: var(--color-primary);
  }

  .contact-card p {
    color: var(--color-gray);
    margin-bottom: 15px;
    font-size: 1.1rem;
  }

  .contact-link {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 500;
    transition: var(--transition);
  }

  .contact-link:hover {
    color: var(--color-secondary);
  }

  .contact-note {
    font-size: 0.9rem;
    color: var(--color-gray);
    font-style: italic;
  }

  .social-links {
    background: var(--color-white);
    padding: 30px;
    border-radius: 15px;
    box-shadow: var(--shadow-soft);
    text-align: center;
  }

  .social-links h3 {
    font-size: 1.3rem;
    margin-bottom: 20px;
    color: var(--color-primary);
  }

  .social-icons {
    display: flex;
    justify-content: center;
    gap: 15px;
  }

  .social-link {
    width: 50px;
    height: 50px;
    background: var(--color-light);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-gray);
    transition: var(--transition);
    text-decoration: none;
  }

  .social-link:hover {
    background: var(--color-accent);
    color: var(--color-white);
    transform: translateY(-3px);
  }

  .contact-form-wrapper {
    background: var(--color-white);
    padding: 40px;
    border-radius: 20px;
    box-shadow: var(--shadow-soft);
  }

  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 25px;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group label {
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--color-primary);
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 12px 15px;
    border: 2px solid var(--color-light-gray);
    border-radius: 8px;
    font-family: var(--font-body);
    font-size: 1rem;
    transition: var(--transition);
    background: var(--color-white);
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--color-accent);
    box-shadow: 0 0 0 3px rgba(212, 175, 55, 0.1);
  }

  .form-group textarea {
    resize: vertical;
    min-height: 120px;
  }

  .btn-submit {
    position: relative;
    overflow: hidden;
  }

  .btn-loading {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @media (max-width: 768px) {
    .contact-content {
      grid-template-columns: 1fr;
      gap: 40px;
    }

    .section-title {
      font-size: 2rem;
    }

    .contact-form-wrapper {
      padding: 30px 20px;
    }

    .social-icons {
      gap: 10px;
    }

    .social-link {
      width: 45px;
      height: 45px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    const btnText = document.querySelector('.btn-text');
    const btnLoading = document.querySelector('.btn-loading');

    form?.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Show loading state
      btnText.style.display = 'none';
      btnLoading.style.display = 'inline';
      
      // Simulate form submission (replace with actual form handling)
      setTimeout(() => {
        alert('Dziękuję za wiadomość! Skontaktuję się z Tobą wkrótce.');
        form.reset();
        
        // Reset button state
        btnText.style.display = 'inline';
        btnLoading.style.display = 'none';
      }, 2000);
    });
  });
</script>